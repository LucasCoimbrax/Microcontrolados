ARM GAS  C:\Users\coimb\AppData\Local\Temp\cczvZ1GD.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.main,"ax",%progbits
  20              		.align	1
  21              		.global	main
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	main:
  27              	.LFB130:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "button.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
ARM GAS  C:\Users\coimb\AppData\Local\Temp\cczvZ1GD.s 			page 2


  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/main.c **** void SystemClock_Config(void);
  50:Core/Src/main.c **** static void MX_GPIO_Init(void);
  51:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  56:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /**
  61:Core/Src/main.c ****   * @brief  The application entry point.
  62:Core/Src/main.c ****   * @retval int
  63:Core/Src/main.c ****   */
  64:Core/Src/main.c **** int main(void)
  65:Core/Src/main.c **** {
  29              		.loc 1 65 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              	.LCFI1:
  40              		.cfi_def_cfa_register 7
  66:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  67:Core/Src/main.c ****   /* USER CODE END 1 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  72:Core/Src/main.c ****    HAL_Init();
  41              		.loc 1 72 4
  42 0004 FFF7FEFF 		bl	HAL_Init
  73:Core/Src/main.c **** 
ARM GAS  C:\Users\coimb\AppData\Local\Temp\cczvZ1GD.s 			page 3


  74:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE END Init */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* Configure the system clock */
  79:Core/Src/main.c ****   SystemClock_Config();
  43              		.loc 1 79 3
  44 0008 FFF7FEFF 		bl	SystemClock_Config
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE END SysInit */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Initialize all configured peripherals */
  86:Core/Src/main.c ****   MX_GPIO_Init();
  45              		.loc 1 86 3
  46 000c FFF7FEFF 		bl	MX_GPIO_Init
  47              	.L3:
  87:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END 2 */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Infinite loop */
  92:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  93:Core/Src/main.c ****   while (1)
  94:Core/Src/main.c ****   {
  95:Core/Src/main.c ****     // // Teste dos pinos e botões configurados na placa
  96:Core/Src/main.c ****     // //Bottão 1
  97:Core/Src/main.c ****       if( button_release( GPIOA, GPIO_PIN_5, 0) )
  48              		.loc 1 97 11
  49 0010 0022     		movs	r2, #0
  50 0012 2021     		movs	r1, #32
  51 0014 2748     		ldr	r0, .L4
  52 0016 FFF7FEFF 		bl	button_release
  53 001a 0346     		mov	r3, r0
  54              		.loc 1 97 9
  55 001c 002B     		cmp	r3, #0
  56 001e 40D0     		beq	.L2
  98:Core/Src/main.c ****       {
  99:Core/Src/main.c ****         HAL_GPIO_WritePin( GPIOB, LED_1_Pin, 1);
  57              		.loc 1 99 9
  58 0020 0122     		movs	r2, #1
  59 0022 0821     		movs	r1, #8
  60 0024 2448     		ldr	r0, .L4+4
  61 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 100:Core/Src/main.c ****         HAL_Delay(200);
  62              		.loc 1 100 9
  63 002a C820     		movs	r0, #200
  64 002c FFF7FEFF 		bl	HAL_Delay
 101:Core/Src/main.c ****         HAL_GPIO_WritePin( GPIOB, LED_1_Pin, 0);
  65              		.loc 1 101 9
  66 0030 0022     		movs	r2, #0
  67 0032 0821     		movs	r1, #8
  68 0034 2048     		ldr	r0, .L4+4
  69 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****         HAL_GPIO_WritePin( GPIOB, LED_2_Pin, 1);
ARM GAS  C:\Users\coimb\AppData\Local\Temp\cczvZ1GD.s 			page 4


  70              		.loc 1 103 9
  71 003a 0122     		movs	r2, #1
  72 003c 1021     		movs	r1, #16
  73 003e 1E48     		ldr	r0, .L4+4
  74 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 104:Core/Src/main.c ****         HAL_Delay(200);
  75              		.loc 1 104 9
  76 0044 C820     		movs	r0, #200
  77 0046 FFF7FEFF 		bl	HAL_Delay
 105:Core/Src/main.c ****         HAL_GPIO_WritePin( GPIOB, LED_2_Pin, 0);
  78              		.loc 1 105 9
  79 004a 0022     		movs	r2, #0
  80 004c 1021     		movs	r1, #16
  81 004e 1A48     		ldr	r0, .L4+4
  82 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****         HAL_GPIO_WritePin( GPIOB, LED_3_Pin, 1);
  83              		.loc 1 107 9
  84 0054 0122     		movs	r2, #1
  85 0056 2021     		movs	r1, #32
  86 0058 1748     		ldr	r0, .L4+4
  87 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 108:Core/Src/main.c ****         HAL_Delay(200);
  88              		.loc 1 108 9
  89 005e C820     		movs	r0, #200
  90 0060 FFF7FEFF 		bl	HAL_Delay
 109:Core/Src/main.c ****         HAL_GPIO_WritePin( GPIOB, LED_3_Pin, 0);
  91              		.loc 1 109 9
  92 0064 0022     		movs	r2, #0
  93 0066 2021     		movs	r1, #32
  94 0068 1348     		ldr	r0, .L4+4
  95 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****         HAL_GPIO_WritePin( GPIOB, LED_4_Pin, 1);
  96              		.loc 1 111 9
  97 006e 0122     		movs	r2, #1
  98 0070 4021     		movs	r1, #64
  99 0072 1148     		ldr	r0, .L4+4
 100 0074 FFF7FEFF 		bl	HAL_GPIO_WritePin
 112:Core/Src/main.c ****         HAL_Delay(200);
 101              		.loc 1 112 9
 102 0078 C820     		movs	r0, #200
 103 007a FFF7FEFF 		bl	HAL_Delay
 113:Core/Src/main.c ****         HAL_GPIO_WritePin( GPIOB, LED_4_Pin, 0);
 104              		.loc 1 113 9
 105 007e 0022     		movs	r2, #0
 106 0080 4021     		movs	r1, #64
 107 0082 0D48     		ldr	r0, .L4+4
 108 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****         HAL_GPIO_WritePin( GPIOB, LED_5_Pin, 1);
 109              		.loc 1 115 9
 110 0088 0122     		movs	r2, #1
 111 008a 8021     		movs	r1, #128
 112 008c 0A48     		ldr	r0, .L4+4
 113 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 116:Core/Src/main.c ****         HAL_Delay(200);
ARM GAS  C:\Users\coimb\AppData\Local\Temp\cczvZ1GD.s 			page 5


 114              		.loc 1 116 9
 115 0092 C820     		movs	r0, #200
 116 0094 FFF7FEFF 		bl	HAL_Delay
 117:Core/Src/main.c ****         HAL_GPIO_WritePin( GPIOB, LED_5_Pin, 0);      
 117              		.loc 1 117 9
 118 0098 0022     		movs	r2, #0
 119 009a 8021     		movs	r1, #128
 120 009c 0648     		ldr	r0, .L4+4
 121 009e FFF7FEFF 		bl	HAL_GPIO_WritePin
 122              	.L2:
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****       }
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****     // Altera o estado lógico do led da placa a cada 200ms
 122:Core/Src/main.c ****     HAL_GPIO_TogglePin(KIT_LED_GPIO_Port, KIT_LED_Pin);
 123              		.loc 1 122 5
 124 00a2 4FF40051 		mov	r1, #8192
 125 00a6 0548     		ldr	r0, .L4+8
 126 00a8 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 123:Core/Src/main.c ****     HAL_Delay(200);
 127              		.loc 1 123 5
 128 00ac C820     		movs	r0, #200
 129 00ae FFF7FEFF 		bl	HAL_Delay
  97:Core/Src/main.c ****       {
 130              		.loc 1 97 9
 131 00b2 ADE7     		b	.L3
 132              	.L5:
 133              		.align	2
 134              	.L4:
 135 00b4 00000240 		.word	1073872896
 136 00b8 00040240 		.word	1073873920
 137 00bc 00080240 		.word	1073874944
 138              		.cfi_endproc
 139              	.LFE130:
 141              		.section	.text.SystemClock_Config,"ax",%progbits
 142              		.align	1
 143              		.global	SystemClock_Config
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 148              	SystemClock_Config:
 149              	.LFB131:
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****     /* USER CODE END WHILE */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 128:Core/Src/main.c ****   }
 129:Core/Src/main.c ****   /* USER CODE END 3 */
 130:Core/Src/main.c **** }
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** /**
 133:Core/Src/main.c ****   * @brief System Clock Configuration
 134:Core/Src/main.c ****   * @retval None
 135:Core/Src/main.c ****   */
 136:Core/Src/main.c **** void SystemClock_Config(void)
 137:Core/Src/main.c **** {
 150              		.loc 1 137 1
ARM GAS  C:\Users\coimb\AppData\Local\Temp\cczvZ1GD.s 			page 6


 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 80
 153              		@ frame_needed = 1, uses_anonymous_args = 0
 154 0000 80B5     		push	{r7, lr}
 155              	.LCFI2:
 156              		.cfi_def_cfa_offset 8
 157              		.cfi_offset 7, -8
 158              		.cfi_offset 14, -4
 159 0002 94B0     		sub	sp, sp, #80
 160              	.LCFI3:
 161              		.cfi_def_cfa_offset 88
 162 0004 00AF     		add	r7, sp, #0
 163              	.LCFI4:
 164              		.cfi_def_cfa_register 7
 138:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 165              		.loc 1 138 22
 166 0006 07F12003 		add	r3, r7, #32
 167 000a 3022     		movs	r2, #48
 168 000c 0021     		movs	r1, #0
 169 000e 1846     		mov	r0, r3
 170 0010 FFF7FEFF 		bl	memset
 139:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 171              		.loc 1 139 22
 172 0014 07F10C03 		add	r3, r7, #12
 173 0018 0022     		movs	r2, #0
 174 001a 1A60     		str	r2, [r3]
 175 001c 5A60     		str	r2, [r3, #4]
 176 001e 9A60     		str	r2, [r3, #8]
 177 0020 DA60     		str	r2, [r3, #12]
 178 0022 1A61     		str	r2, [r3, #16]
 179              	.LBB4:
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 142:Core/Src/main.c ****   */
 143:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 180              		.loc 1 143 3
 181 0024 0023     		movs	r3, #0
 182 0026 BB60     		str	r3, [r7, #8]
 183 0028 274B     		ldr	r3, .L10
 184 002a 1B6C     		ldr	r3, [r3, #64]
 185 002c 264A     		ldr	r2, .L10
 186 002e 43F08053 		orr	r3, r3, #268435456
 187 0032 1364     		str	r3, [r2, #64]
 188 0034 244B     		ldr	r3, .L10
 189 0036 1B6C     		ldr	r3, [r3, #64]
 190 0038 03F08053 		and	r3, r3, #268435456
 191 003c BB60     		str	r3, [r7, #8]
 192 003e BB68     		ldr	r3, [r7, #8]
 193              	.LBE4:
 194              	.LBB5:
 144:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 195              		.loc 1 144 3
 196 0040 0023     		movs	r3, #0
 197 0042 7B60     		str	r3, [r7, #4]
 198 0044 214B     		ldr	r3, .L10+4
 199 0046 1B68     		ldr	r3, [r3]
 200 0048 204A     		ldr	r2, .L10+4
ARM GAS  C:\Users\coimb\AppData\Local\Temp\cczvZ1GD.s 			page 7


 201 004a 43F44043 		orr	r3, r3, #49152
 202 004e 1360     		str	r3, [r2]
 203 0050 1E4B     		ldr	r3, .L10+4
 204 0052 1B68     		ldr	r3, [r3]
 205 0054 03F44043 		and	r3, r3, #49152
 206 0058 7B60     		str	r3, [r7, #4]
 207 005a 7B68     		ldr	r3, [r7, #4]
 208              	.LBE5:
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 147:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 148:Core/Src/main.c ****   */
 149:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 209              		.loc 1 149 36
 210 005c 0123     		movs	r3, #1
 211 005e 3B62     		str	r3, [r7, #32]
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 212              		.loc 1 150 30
 213 0060 4FF48033 		mov	r3, #65536
 214 0064 7B62     		str	r3, [r7, #36]
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 215              		.loc 1 151 34
 216 0066 0223     		movs	r3, #2
 217 0068 BB63     		str	r3, [r7, #56]
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 218              		.loc 1 152 35
 219 006a 4FF48003 		mov	r3, #4194304
 220 006e FB63     		str	r3, [r7, #60]
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 221              		.loc 1 153 30
 222 0070 1923     		movs	r3, #25
 223 0072 3B64     		str	r3, [r7, #64]
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 224              		.loc 1 154 30
 225 0074 C023     		movs	r3, #192
 226 0076 7B64     		str	r3, [r7, #68]
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 227              		.loc 1 155 30
 228 0078 0223     		movs	r3, #2
 229 007a BB64     		str	r3, [r7, #72]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 230              		.loc 1 156 30
 231 007c 0423     		movs	r3, #4
 232 007e FB64     		str	r3, [r7, #76]
 157:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 233              		.loc 1 157 7
 234 0080 07F12003 		add	r3, r7, #32
 235 0084 1846     		mov	r0, r3
 236 0086 FFF7FEFF 		bl	HAL_RCC_OscConfig
 237 008a 0346     		mov	r3, r0
 238              		.loc 1 157 6
 239 008c 002B     		cmp	r3, #0
 240 008e 01D0     		beq	.L7
 158:Core/Src/main.c ****   {
 159:Core/Src/main.c ****     Error_Handler();
 241              		.loc 1 159 5
 242 0090 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\coimb\AppData\Local\Temp\cczvZ1GD.s 			page 8


 243              	.L7:
 160:Core/Src/main.c ****   }
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 163:Core/Src/main.c ****   */
 164:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 244              		.loc 1 164 31
 245 0094 0F23     		movs	r3, #15
 246 0096 FB60     		str	r3, [r7, #12]
 165:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 166:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 247              		.loc 1 166 34
 248 0098 0223     		movs	r3, #2
 249 009a 3B61     		str	r3, [r7, #16]
 167:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 250              		.loc 1 167 35
 251 009c 0023     		movs	r3, #0
 252 009e 7B61     		str	r3, [r7, #20]
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 253              		.loc 1 168 36
 254 00a0 4FF48053 		mov	r3, #4096
 255 00a4 BB61     		str	r3, [r7, #24]
 169:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 256              		.loc 1 169 36
 257 00a6 0023     		movs	r3, #0
 258 00a8 FB61     		str	r3, [r7, #28]
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 259              		.loc 1 171 7
 260 00aa 07F10C03 		add	r3, r7, #12
 261 00ae 0321     		movs	r1, #3
 262 00b0 1846     		mov	r0, r3
 263 00b2 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 264 00b6 0346     		mov	r3, r0
 265              		.loc 1 171 6
 266 00b8 002B     		cmp	r3, #0
 267 00ba 01D0     		beq	.L9
 172:Core/Src/main.c ****   {
 173:Core/Src/main.c ****     Error_Handler();
 268              		.loc 1 173 5
 269 00bc FFF7FEFF 		bl	Error_Handler
 270              	.L9:
 174:Core/Src/main.c ****   }
 175:Core/Src/main.c **** }
 271              		.loc 1 175 1
 272 00c0 00BF     		nop
 273 00c2 5037     		adds	r7, r7, #80
 274              	.LCFI5:
 275              		.cfi_def_cfa_offset 8
 276 00c4 BD46     		mov	sp, r7
 277              	.LCFI6:
 278              		.cfi_def_cfa_register 13
 279              		@ sp needed
 280 00c6 80BD     		pop	{r7, pc}
 281              	.L11:
 282              		.align	2
 283              	.L10:
ARM GAS  C:\Users\coimb\AppData\Local\Temp\cczvZ1GD.s 			page 9


 284 00c8 00380240 		.word	1073887232
 285 00cc 00700040 		.word	1073770496
 286              		.cfi_endproc
 287              	.LFE131:
 289              		.section	.text.MX_GPIO_Init,"ax",%progbits
 290              		.align	1
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 295              	MX_GPIO_Init:
 296              	.LFB132:
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** /**
 178:Core/Src/main.c ****   * @brief GPIO Initialization Function
 179:Core/Src/main.c ****   * @param None
 180:Core/Src/main.c ****   * @retval None
 181:Core/Src/main.c ****   */
 182:Core/Src/main.c **** static void MX_GPIO_Init(void)
 183:Core/Src/main.c **** {
 297              		.loc 1 183 1
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 40
 300              		@ frame_needed = 1, uses_anonymous_args = 0
 301 0000 80B5     		push	{r7, lr}
 302              	.LCFI7:
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 7, -8
 305              		.cfi_offset 14, -4
 306 0002 8AB0     		sub	sp, sp, #40
 307              	.LCFI8:
 308              		.cfi_def_cfa_offset 48
 309 0004 00AF     		add	r7, sp, #0
 310              	.LCFI9:
 311              		.cfi_def_cfa_register 7
 184:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 312              		.loc 1 184 20
 313 0006 07F11403 		add	r3, r7, #20
 314 000a 0022     		movs	r2, #0
 315 000c 1A60     		str	r2, [r3]
 316 000e 5A60     		str	r2, [r3, #4]
 317 0010 9A60     		str	r2, [r3, #8]
 318 0012 DA60     		str	r2, [r3, #12]
 319 0014 1A61     		str	r2, [r3, #16]
 320              	.LBB6:
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 187:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 321              		.loc 1 187 3
 322 0016 0023     		movs	r3, #0
 323 0018 3B61     		str	r3, [r7, #16]
 324 001a 374B     		ldr	r3, .L13
 325 001c 1B6B     		ldr	r3, [r3, #48]
 326 001e 364A     		ldr	r2, .L13
 327 0020 43F00403 		orr	r3, r3, #4
 328 0024 1363     		str	r3, [r2, #48]
 329 0026 344B     		ldr	r3, .L13
 330 0028 1B6B     		ldr	r3, [r3, #48]
ARM GAS  C:\Users\coimb\AppData\Local\Temp\cczvZ1GD.s 			page 10


 331 002a 03F00403 		and	r3, r3, #4
 332 002e 3B61     		str	r3, [r7, #16]
 333 0030 3B69     		ldr	r3, [r7, #16]
 334              	.LBE6:
 335              	.LBB7:
 188:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 336              		.loc 1 188 3
 337 0032 0023     		movs	r3, #0
 338 0034 FB60     		str	r3, [r7, #12]
 339 0036 304B     		ldr	r3, .L13
 340 0038 1B6B     		ldr	r3, [r3, #48]
 341 003a 2F4A     		ldr	r2, .L13
 342 003c 43F08003 		orr	r3, r3, #128
 343 0040 1363     		str	r3, [r2, #48]
 344 0042 2D4B     		ldr	r3, .L13
 345 0044 1B6B     		ldr	r3, [r3, #48]
 346 0046 03F08003 		and	r3, r3, #128
 347 004a FB60     		str	r3, [r7, #12]
 348 004c FB68     		ldr	r3, [r7, #12]
 349              	.LBE7:
 350              	.LBB8:
 189:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 351              		.loc 1 189 3
 352 004e 0023     		movs	r3, #0
 353 0050 BB60     		str	r3, [r7, #8]
 354 0052 294B     		ldr	r3, .L13
 355 0054 1B6B     		ldr	r3, [r3, #48]
 356 0056 284A     		ldr	r2, .L13
 357 0058 43F00103 		orr	r3, r3, #1
 358 005c 1363     		str	r3, [r2, #48]
 359 005e 264B     		ldr	r3, .L13
 360 0060 1B6B     		ldr	r3, [r3, #48]
 361 0062 03F00103 		and	r3, r3, #1
 362 0066 BB60     		str	r3, [r7, #8]
 363 0068 BB68     		ldr	r3, [r7, #8]
 364              	.LBE8:
 365              	.LBB9:
 190:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 366              		.loc 1 190 3
 367 006a 0023     		movs	r3, #0
 368 006c 7B60     		str	r3, [r7, #4]
 369 006e 224B     		ldr	r3, .L13
 370 0070 1B6B     		ldr	r3, [r3, #48]
 371 0072 214A     		ldr	r2, .L13
 372 0074 43F00203 		orr	r3, r3, #2
 373 0078 1363     		str	r3, [r2, #48]
 374 007a 1F4B     		ldr	r3, .L13
 375 007c 1B6B     		ldr	r3, [r3, #48]
 376 007e 03F00203 		and	r3, r3, #2
 377 0082 7B60     		str	r3, [r7, #4]
 378 0084 7B68     		ldr	r3, [r7, #4]
 379              	.LBE9:
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 193:Core/Src/main.c ****   HAL_GPIO_WritePin(KIT_LED_GPIO_Port, KIT_LED_Pin, GPIO_PIN_RESET);
 380              		.loc 1 193 3
 381 0086 0022     		movs	r2, #0
ARM GAS  C:\Users\coimb\AppData\Local\Temp\cczvZ1GD.s 			page 11


 382 0088 4FF40051 		mov	r1, #8192
 383 008c 1B48     		ldr	r0, .L13+4
 384 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 196:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, LED_1_Pin|LED_2_Pin|LED_3_Pin|LED_4_Pin
 385              		.loc 1 196 3
 386 0092 0022     		movs	r2, #0
 387 0094 F821     		movs	r1, #248
 388 0096 1A48     		ldr	r0, .L13+8
 389 0098 FFF7FEFF 		bl	HAL_GPIO_WritePin
 197:Core/Src/main.c ****                           |LED_5_Pin, GPIO_PIN_RESET);
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /*Configure GPIO pin : KIT_LED_Pin */
 200:Core/Src/main.c ****   GPIO_InitStruct.Pin = KIT_LED_Pin;
 390              		.loc 1 200 23
 391 009c 4FF40053 		mov	r3, #8192
 392 00a0 7B61     		str	r3, [r7, #20]
 201:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 393              		.loc 1 201 24
 394 00a2 0123     		movs	r3, #1
 395 00a4 BB61     		str	r3, [r7, #24]
 202:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 396              		.loc 1 202 24
 397 00a6 0023     		movs	r3, #0
 398 00a8 FB61     		str	r3, [r7, #28]
 203:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 399              		.loc 1 203 25
 400 00aa 0023     		movs	r3, #0
 401 00ac 3B62     		str	r3, [r7, #32]
 204:Core/Src/main.c ****   HAL_GPIO_Init(KIT_LED_GPIO_Port, &GPIO_InitStruct);
 402              		.loc 1 204 3
 403 00ae 07F11403 		add	r3, r7, #20
 404 00b2 1946     		mov	r1, r3
 405 00b4 1148     		ldr	r0, .L13+4
 406 00b6 FFF7FEFF 		bl	HAL_GPIO_Init
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /*Configure GPIO pins : BUTTON_2_Pin BUTTON_1_Pin */
 207:Core/Src/main.c ****   GPIO_InitStruct.Pin = BUTTON_2_Pin|BUTTON_1_Pin;
 407              		.loc 1 207 23
 408 00ba 3023     		movs	r3, #48
 409 00bc 7B61     		str	r3, [r7, #20]
 208:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 410              		.loc 1 208 24
 411 00be 0023     		movs	r3, #0
 412 00c0 BB61     		str	r3, [r7, #24]
 209:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 413              		.loc 1 209 24
 414 00c2 0023     		movs	r3, #0
 415 00c4 FB61     		str	r3, [r7, #28]
 210:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 416              		.loc 1 210 3
 417 00c6 07F11403 		add	r3, r7, #20
 418 00ca 1946     		mov	r1, r3
 419 00cc 0D48     		ldr	r0, .L13+12
 420 00ce FFF7FEFF 		bl	HAL_GPIO_Init
 211:Core/Src/main.c **** 
ARM GAS  C:\Users\coimb\AppData\Local\Temp\cczvZ1GD.s 			page 12


 212:Core/Src/main.c ****   /*Configure GPIO pins : LED_1_Pin LED_2_Pin LED_3_Pin LED_4_Pin
 213:Core/Src/main.c ****                            LED_5_Pin */
 214:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_1_Pin|LED_2_Pin|LED_3_Pin|LED_4_Pin
 421              		.loc 1 214 23
 422 00d2 F823     		movs	r3, #248
 423 00d4 7B61     		str	r3, [r7, #20]
 215:Core/Src/main.c ****                           |LED_5_Pin;
 216:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 424              		.loc 1 216 24
 425 00d6 0123     		movs	r3, #1
 426 00d8 BB61     		str	r3, [r7, #24]
 217:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 427              		.loc 1 217 24
 428 00da 0023     		movs	r3, #0
 429 00dc FB61     		str	r3, [r7, #28]
 218:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 430              		.loc 1 218 25
 431 00de 0023     		movs	r3, #0
 432 00e0 3B62     		str	r3, [r7, #32]
 219:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 433              		.loc 1 219 3
 434 00e2 07F11403 		add	r3, r7, #20
 435 00e6 1946     		mov	r1, r3
 436 00e8 0548     		ldr	r0, .L13+8
 437 00ea FFF7FEFF 		bl	HAL_GPIO_Init
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** }
 438              		.loc 1 221 1
 439 00ee 00BF     		nop
 440 00f0 2837     		adds	r7, r7, #40
 441              	.LCFI10:
 442              		.cfi_def_cfa_offset 8
 443 00f2 BD46     		mov	sp, r7
 444              	.LCFI11:
 445              		.cfi_def_cfa_register 13
 446              		@ sp needed
 447 00f4 80BD     		pop	{r7, pc}
 448              	.L14:
 449 00f6 00BF     		.align	2
 450              	.L13:
 451 00f8 00380240 		.word	1073887232
 452 00fc 00080240 		.word	1073874944
 453 0100 00040240 		.word	1073873920
 454 0104 00000240 		.word	1073872896
 455              		.cfi_endproc
 456              	.LFE132:
 458              		.section	.text.Error_Handler,"ax",%progbits
 459              		.align	1
 460              		.global	Error_Handler
 461              		.syntax unified
 462              		.thumb
 463              		.thumb_func
 465              	Error_Handler:
 466              	.LFB133:
 222:Core/Src/main.c **** 
 223:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 224:Core/Src/main.c **** 
ARM GAS  C:\Users\coimb\AppData\Local\Temp\cczvZ1GD.s 			page 13


 225:Core/Src/main.c **** /* USER CODE END 4 */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c **** /**
 228:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 229:Core/Src/main.c ****   * @retval None
 230:Core/Src/main.c ****   */
 231:Core/Src/main.c **** void Error_Handler(void)
 232:Core/Src/main.c **** {
 467              		.loc 1 232 1
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 1, uses_anonymous_args = 0
 471              		@ link register save eliminated.
 472 0000 80B4     		push	{r7}
 473              	.LCFI12:
 474              		.cfi_def_cfa_offset 4
 475              		.cfi_offset 7, -4
 476 0002 00AF     		add	r7, sp, #0
 477              	.LCFI13:
 478              		.cfi_def_cfa_register 7
 479              	.LBB10:
 480              	.LBB11:
 481              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
ARM GAS  C:\Users\coimb\AppData\Local\Temp\cczvZ1GD.s 			page 14


  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  C:\Users\coimb\AppData\Local\Temp\cczvZ1GD.s 			page 15


  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 482              		.loc 2 142 3
 483              		.syntax unified
 484              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 485 0004 72B6     		cpsid i
 486              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\coimb\AppData\Local\Temp\cczvZ1GD.s 			page 16


 487              		.loc 2 143 1
 488              		.thumb
 489              		.syntax unified
 490 0006 00BF     		nop
 491              	.L16:
 492              	.LBE11:
 493              	.LBE10:
 233:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 234:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 235:Core/Src/main.c ****   __disable_irq();
 236:Core/Src/main.c ****   while (1)
 494              		.loc 1 236 9 discriminator 1
 495 0008 FEE7     		b	.L16
 496              		.cfi_endproc
 497              	.LFE133:
 499              		.text
 500              	.Letext0:
 501              		.file 3 "e:\\utfpr\\microcontrolados\\programas\\arm-gcc\\tools\\tools\\arm-gnu-toolchain-11.3.rel
 502              		.file 4 "e:\\utfpr\\microcontrolados\\programas\\arm-gcc\\tools\\tools\\arm-gnu-toolchain-11.3.rel
 503              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 504              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 505              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 506              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 507              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 508              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 509              		.file 11 "Core/Inc/button.h"
ARM GAS  C:\Users\coimb\AppData\Local\Temp\cczvZ1GD.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\coimb\AppData\Local\Temp\cczvZ1GD.s:20     .text.main:00000000 $t
C:\Users\coimb\AppData\Local\Temp\cczvZ1GD.s:26     .text.main:00000000 main
C:\Users\coimb\AppData\Local\Temp\cczvZ1GD.s:148    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\coimb\AppData\Local\Temp\cczvZ1GD.s:295    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\coimb\AppData\Local\Temp\cczvZ1GD.s:135    .text.main:000000b4 $d
C:\Users\coimb\AppData\Local\Temp\cczvZ1GD.s:142    .text.SystemClock_Config:00000000 $t
C:\Users\coimb\AppData\Local\Temp\cczvZ1GD.s:465    .text.Error_Handler:00000000 Error_Handler
C:\Users\coimb\AppData\Local\Temp\cczvZ1GD.s:284    .text.SystemClock_Config:000000c8 $d
C:\Users\coimb\AppData\Local\Temp\cczvZ1GD.s:290    .text.MX_GPIO_Init:00000000 $t
C:\Users\coimb\AppData\Local\Temp\cczvZ1GD.s:451    .text.MX_GPIO_Init:000000f8 $d
C:\Users\coimb\AppData\Local\Temp\cczvZ1GD.s:459    .text.Error_Handler:00000000 $t

UNDEFINED SYMBOLS
HAL_Init
button_release
HAL_GPIO_WritePin
HAL_Delay
HAL_GPIO_TogglePin
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_GPIO_Init
